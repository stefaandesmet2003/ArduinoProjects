#include <EEPROM.h>

// start reading from the first byte (address 0) of the EEPROM
int address = 0;
byte value;
//[25] = railcom enabled
//update 04/2021 : all unused CV's set to 0
//update 06/2021 : old database entries removed
//update 07/2021 : DCC_DEFAULT_FORMAT = DCC128 (CV24)
// keep 64 (0x40) bytes for CV
// at offset 0x40 the new loco database starts (LOCODB_EEPROM_OFFSET)
byte CommandStationConfig[] = {
  0x17,0x01,0x30,0x00,0x00,0x17,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x02,0x0,0x00, 0x00,0x00,0x03,0x03,
  0x03,0x03,0x00,0x00,0x03,0x01,0x08,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x08,0x28,0x01,0x1E,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x03,0xC0,0x44,0x49,0x45,0x53,
  0x45,0x4C,0x00,0x00,0x00,0x00,0x04,0xC0,0x53,0x54,
  0x4F,0x4F,0x4D,0x00,0x00,0x00,0x00,0x00
};

void setup()
{
  uint16_t addr = 0;

  // initialize the LED pin as an output.
  pinMode(13, OUTPUT);

  // initialize serial and wait for port to open:
  Serial.begin(115200);
  Serial.print("sizeof CommandStationConfig = ");
  Serial.println(sizeof(CommandStationConfig));
  for (addr=0;addr<sizeof(CommandStationConfig);addr++)
  {
    Serial.print("eeprom write addr ");
    Serial.print(addr);
    Serial.print(" : val = ");
    Serial.println(CommandStationConfig[addr]);
    
    EEPROM.update(addr,CommandStationConfig[addr]);
  }
  // schrijf 0 in de andere eeprom locaties tot aan addr 512
  for (addr=sizeof(CommandStationConfig);addr<512;addr++)
  {
    EEPROM.update(addr,0);
  }

  // turn the LED on when we're done
  digitalWrite(13, HIGH);
}

void loop()
{
  // all done!
}
